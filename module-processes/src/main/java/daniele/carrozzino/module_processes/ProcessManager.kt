package daniele.carrozzino.module_processes

object ProcessManager {
    var log = ""
    var methodMap : HashMap<String, ArrayList<String>> = HashMap()

    val initText =

        "# ***********************************************\n" +
                "# |                                             |\n" +
                "# |                                             |\n" +
                "# |            FILE AUTOGENERATED               |\n" +
                "# |                                             |\n" +
                "# |                                             |\n" +
                "# ***********************************************\n\n" +

                "# File generated from ProcessAnnotation,\n" +
                "# it's an external module that extend the AbstractProcessor logic\n" +

                "# Insert here all your external libraries or the value of your Missing file\n\n"

    fun getTextFromMap() : String{
        var text = initText
        methodMap.forEach { (key, value) ->
            text += "-keep class $key {\n"

            //Get everything
            if(value.size == 0){
                text += "   *;\n"
            }
            //Get specific method
            else{
                value.forEach { item ->
                    text += "   $item\n"
                }
            }
            text += "}\n\n"
        }
        return text
    }
}